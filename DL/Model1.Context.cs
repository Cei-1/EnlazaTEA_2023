//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EnlazaTEA2023Entities1 : DbContext
    {
        public EnlazaTEA2023Entities1()
            : base("name=EnlazaTEA2023Entities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Especialista> Especialistas { get; set; }
        public virtual DbSet<Paciente> Pacientes { get; set; }
        public virtual DbSet<Rol> Rols { get; set; }
        public virtual DbSet<Usuario> Usuarios { get; set; }
        public virtual DbSet<Blog> Blogs { get; set; }
    
        public virtual int AddEspecialista(string nombreCarrera, string noCedula, string especialidad, string calle, string numeroExterno, string numeroInterno, string colonia, string ciudad, string estado, string codigoPostal, string telefono, string celular, Nullable<bool> estatus, Nullable<int> idUsuario)
        {
            var nombreCarreraParameter = nombreCarrera != null ?
                new ObjectParameter("NombreCarrera", nombreCarrera) :
                new ObjectParameter("NombreCarrera", typeof(string));
    
            var noCedulaParameter = noCedula != null ?
                new ObjectParameter("NoCedula", noCedula) :
                new ObjectParameter("NoCedula", typeof(string));
    
            var especialidadParameter = especialidad != null ?
                new ObjectParameter("Especialidad", especialidad) :
                new ObjectParameter("Especialidad", typeof(string));
    
            var calleParameter = calle != null ?
                new ObjectParameter("Calle", calle) :
                new ObjectParameter("Calle", typeof(string));
    
            var numeroExternoParameter = numeroExterno != null ?
                new ObjectParameter("NumeroExterno", numeroExterno) :
                new ObjectParameter("NumeroExterno", typeof(string));
    
            var numeroInternoParameter = numeroInterno != null ?
                new ObjectParameter("NumeroInterno", numeroInterno) :
                new ObjectParameter("NumeroInterno", typeof(string));
    
            var coloniaParameter = colonia != null ?
                new ObjectParameter("Colonia", colonia) :
                new ObjectParameter("Colonia", typeof(string));
    
            var ciudadParameter = ciudad != null ?
                new ObjectParameter("Ciudad", ciudad) :
                new ObjectParameter("Ciudad", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var codigoPostalParameter = codigoPostal != null ?
                new ObjectParameter("CodigoPostal", codigoPostal) :
                new ObjectParameter("CodigoPostal", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var celularParameter = celular != null ?
                new ObjectParameter("Celular", celular) :
                new ObjectParameter("Celular", typeof(string));
    
            var estatusParameter = estatus.HasValue ?
                new ObjectParameter("Estatus", estatus) :
                new ObjectParameter("Estatus", typeof(bool));
    
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddEspecialista", nombreCarreraParameter, noCedulaParameter, especialidadParameter, calleParameter, numeroExternoParameter, numeroInternoParameter, coloniaParameter, ciudadParameter, estadoParameter, codigoPostalParameter, telefonoParameter, celularParameter, estatusParameter, idUsuarioParameter);
        }
    
        public virtual int AddUsuario(string nombre, string apellidoPaterno, string apellidoMaterno, Nullable<System.DateTime> fechaNacimiento, string email, string contraseña, Nullable<int> idRol)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("Contraseña", contraseña) :
                new ObjectParameter("Contraseña", typeof(string));
    
            var idRolParameter = idRol.HasValue ?
                new ObjectParameter("IdRol", idRol) :
                new ObjectParameter("IdRol", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddUsuario", nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, fechaNacimientoParameter, emailParameter, contraseñaParameter, idRolParameter);
        }
    
        public virtual int AgregarPaciente(string nombre, string apellidoPaterno, string apellidoMaterno, string parentesco, Nullable<int> nivelTDA, Nullable<bool> sexo, Nullable<int> edad, string calle, string numeroExterior, string numeroInterior, string colonia, string municipio, string estado, string cP, string escolaridad, Nullable<int> idUsuario)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var parentescoParameter = parentesco != null ?
                new ObjectParameter("Parentesco", parentesco) :
                new ObjectParameter("Parentesco", typeof(string));
    
            var nivelTDAParameter = nivelTDA.HasValue ?
                new ObjectParameter("NivelTDA", nivelTDA) :
                new ObjectParameter("NivelTDA", typeof(int));
    
            var sexoParameter = sexo.HasValue ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(bool));
    
            var edadParameter = edad.HasValue ?
                new ObjectParameter("Edad", edad) :
                new ObjectParameter("Edad", typeof(int));
    
            var calleParameter = calle != null ?
                new ObjectParameter("Calle", calle) :
                new ObjectParameter("Calle", typeof(string));
    
            var numeroExteriorParameter = numeroExterior != null ?
                new ObjectParameter("NumeroExterior", numeroExterior) :
                new ObjectParameter("NumeroExterior", typeof(string));
    
            var numeroInteriorParameter = numeroInterior != null ?
                new ObjectParameter("NumeroInterior", numeroInterior) :
                new ObjectParameter("NumeroInterior", typeof(string));
    
            var coloniaParameter = colonia != null ?
                new ObjectParameter("Colonia", colonia) :
                new ObjectParameter("Colonia", typeof(string));
    
            var municipioParameter = municipio != null ?
                new ObjectParameter("Municipio", municipio) :
                new ObjectParameter("Municipio", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var cPParameter = cP != null ?
                new ObjectParameter("CP", cP) :
                new ObjectParameter("CP", typeof(string));
    
            var escolaridadParameter = escolaridad != null ?
                new ObjectParameter("Escolaridad", escolaridad) :
                new ObjectParameter("Escolaridad", typeof(string));
    
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarPaciente", nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, parentescoParameter, nivelTDAParameter, sexoParameter, edadParameter, calleParameter, numeroExteriorParameter, numeroInteriorParameter, coloniaParameter, municipioParameter, estadoParameter, cPParameter, escolaridadParameter, idUsuarioParameter);
        }
    
        public virtual ObjectResult<BuscarPacientePorIdUsuario_Result> BuscarPacientePorIdUsuario(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BuscarPacientePorIdUsuario_Result>("BuscarPacientePorIdUsuario", idUsuarioParameter);
        }
    
        public virtual ObjectResult<ConsultarEspecialistasInactivos_Result> ConsultarEspecialistasInactivos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarEspecialistasInactivos_Result>("ConsultarEspecialistasInactivos");
        }
    
        public virtual ObjectResult<GetAllRol_Result> GetAllRol()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllRol_Result>("GetAllRol");
        }
    
        public virtual ObjectResult<GetUsuarioByEmail_Result> GetUsuarioByEmail(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUsuarioByEmail_Result>("GetUsuarioByEmail", emailParameter);
        }
    
        public virtual ObjectResult<sp_BuscarEspecialistaPorIdUsuario_Result> sp_BuscarEspecialistaPorIdUsuario(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_BuscarEspecialistaPorIdUsuario_Result>("sp_BuscarEspecialistaPorIdUsuario", idUsuarioParameter);
        }
    
        public virtual int BlogAdd(string titulo, string nombre, string descripcion, byte[] imagen)
        {
            var tituloParameter = titulo != null ?
                new ObjectParameter("Titulo", titulo) :
                new ObjectParameter("Titulo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("Imagen", imagen) :
                new ObjectParameter("Imagen", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BlogAdd", tituloParameter, nombreParameter, descripcionParameter, imagenParameter);
        }
    
        public virtual ObjectResult<BlogGetAll_Result> BlogGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BlogGetAll_Result>("BlogGetAll");
        }
    
        public virtual int BlogDelete(Nullable<int> idBlog)
        {
            var idBlogParameter = idBlog.HasValue ?
                new ObjectParameter("IdBlog", idBlog) :
                new ObjectParameter("IdBlog", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BlogDelete", idBlogParameter);
        }
    
        public virtual ObjectResult<BlogGetById_Result> BlogGetById(Nullable<int> idBlog)
        {
            var idBlogParameter = idBlog.HasValue ?
                new ObjectParameter("IdBlog", idBlog) :
                new ObjectParameter("IdBlog", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BlogGetById_Result>("BlogGetById", idBlogParameter);
        }
    
        public virtual int BlogUpdate(Nullable<int> idBlog, string titulo, string nombre, string descripcion, byte[] imagen)
        {
            var idBlogParameter = idBlog.HasValue ?
                new ObjectParameter("IdBlog", idBlog) :
                new ObjectParameter("IdBlog", typeof(int));
    
            var tituloParameter = titulo != null ?
                new ObjectParameter("Titulo", titulo) :
                new ObjectParameter("Titulo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var imagenParameter = imagen != null ?
                new ObjectParameter("Imagen", imagen) :
                new ObjectParameter("Imagen", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BlogUpdate", idBlogParameter, tituloParameter, nombreParameter, descripcionParameter, imagenParameter);
        }
    }
}
