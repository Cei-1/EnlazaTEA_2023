@model ML.Multimedia

@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (Session["SessionRol"] == null)
{
    @*<div class="alert alert-danger" role="alert">No tienes permitido ver esta pagina Inicia sesion</div>*@
    <li>@Html.ActionLink("Iniciar Sesion", "Login", "Login", new { area = "" }, new { @class = "nav-link" })</li>

}
else
{
    int IdRol = Convert.ToInt32(Session["SessionRol"]);

    if (IdRol == 1)
    {
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <h2> Crear Articulo</h2>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-12">
                    <h5> Ingrese los datos del multimedia</h5>
                </div>
                <hr />
            </div>

            @using (Html.BeginForm("Form", "Multimedia", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                <div class="row">
                    <div class="col-md-4">
                        @Html.LabelFor(model => Model.IdMultimedia, new { @class = "d-none" })
                        @Html.TextBoxFor(model => Model.IdMultimedia, new { @class = "form-control d-none" })
                    </div>
                </div>
                <br />

                <div class="form-group">
                    @Html.LabelFor(model => model.Titulo)
                    @Html.TextBoxFor(model => model.Titulo, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Titulo)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Contenido)
                    @Html.TextAreaFor(model => model.Contenido, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Contenido)
                </div>

                <div class="row-md-6">
                    <label class="mb-2">Seleccione una imagen o deje la predeterminada</label>


                    <input type="file" name="imgMultimedia" id="fuimgMultimedia" onchange="return ValidarImagen(event,this);" />
                    @Html.ValidationMessageFor(model => Model.Imagen, "", new { @class = "text-danger", @id = "lblImagenErrorMessage" })
                    <br />
                    <br />
                    @if (Model.Imagen != null)
                    {
                        @Html.HiddenFor(model => Model.Imagen)
                        <img id="imgMultimedia" src="data:image/jpg;base64,@Convert.ToBase64String(Model.Imagen)" style="width:350px; height:250px" />
                    }
                    else
                    {
                        <img id="imgMultimedia" src="~/Content/Images/bg-inicio-1.jpg" style="width:350px; height:250px" />
                    }
                </div>


                <div class="form-group">
                    @Html.Label("Tipo de Multimedia")
                    <br />
                    @Html.RadioButtonFor(model => model.Tipo, "Video", new { @id = "videoRadio" })
                    @Html.Label("Video")
                    <br />
                    @Html.RadioButtonFor(model => model.Tipo, "Audio", new { @id = "audioRadio" })
                    @Html.Label("Audio")
                </div>

                <div id="videoFields">
                    @*<div class="row m-2">
                            <div class="col">
                                <h6>¿Necesitas ayuda? Descarga las intrucciones en el boton de abajo.</h6>
                                <a href="@Url.Action("DescargarPDF", "Multimedia")" class="btn btn-primary">Descargar</a>

                            </div>
                        </div>*@
                    <div class="row m-2">
                        <div class="col">
                            <h6>¿Necesitas ayuda? Descarga las intrucciones en el boton de abajo.</h6>
                            <a href="~/Content/Archivos/Instructivo.pdf" class="btn btn-primary">Descargar</a>

                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.VideoID)
                        @Html.TextBoxFor(model => model.VideoID, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.VideoID)
                    </div>

                </div>

                <div id="audioFields" style="display: none;">
                    <div class="form-group">
                        @Html.Label("Archivo de Audio")
                        <input type="file" name="audioFile" id="audioFile" />
                        @Html.ValidationMessageFor(model => Model.Audio, "", new { @class = "text-danger", @id = "lblAudioErrorMessage" })
                        <br />
                        <br />
                        @if (Model.Audio != null)
                        {
                            @Html.HiddenFor(model => Model.Audio)
                            <audio controls>
                                <source src="data:audio/mp3;base64,@Convert.ToBase64String(Model.Audio)" type="audio/mpeg">
                                Tu navegador no soporta la reproducción de audio.
                            </audio>
                        }
                    </div>
                </div>

                <br>
                <div class="row">
                    <div class="col-md-2 col-md-offset-5 mb-2">
                        <input type="submit" value="Guardar" class="btn btn-success" />
                    </div>
                    <div class="col-md-2 ">
                        @Html.ActionLink("Cancelar", "GetAll", "Multimedia", null, new { @class = "btn btn-danger" })

                    </div>
                </div>
             }

        </div>
    }
    else
    {
        @*<div class="alert alert-danger" role="alert">No tienes los permisos necesarios para ver esta pagina</div>*@
        @Html.Partial("~/Views/Error/SinPermisos.cshtml");
    }
}


@section Scripts {
    <script>
        $(document).ready(function () {
            // Function to handle the radio button change event
            $('#videoRadio, #audioRadio').change(function () {
                var isVideo = $('#videoRadio').is(':checked');

                // Show/hide the appropriate fields based on the selection
                if (isVideo) {
                    $('#videoFields').show();
                    $('#audioFields').hide();
                } else {
                    $('#videoFields').hide();
                    $('#audioFields').show();
                }
            });

            // Trigger the change event on page load to initialize the fields
            $('#videoRadio').trigger('change');
        });
    </script>
}

<script src="~/Scripts/jquery-3.4.1.js"></script>
