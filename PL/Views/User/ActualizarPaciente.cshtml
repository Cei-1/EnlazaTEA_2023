@model ML.Paciente

@{
    ViewBag.Title = "Actualizar Paciente";
}

<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f0f2f5;
    }

    .form-container {
        max-width: 800px;
        margin: 50px auto;
        padding: 20px;
        background-color: #fff;
        border-radius: 5px;
        box-shadow: 0 0 8px rgba(0, 0, 0, 0.1);
    }

    .form-group {
        margin-bottom: 20px;
    }

    .form-label {
        font-weight: bold;
    }
</style>

<div class="form-container">
    <h2 class="text-center m-4">Actualizar Paciente</h2>

    @using (Html.BeginForm("ActualizarPaciente", "User", FormMethod.Post))
    {
        <div class="container">
            <div class="row">

                <div class="col-md-4 form-group" style="display:none;">
                    @Html.LabelFor(model => model.IdPaciente, new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.IdPaciente, new { @class = "form-control", @id = "txtid" })
                    @Html.ValidationMessageFor(model => Model.IdPaciente, "", new { @class = "text-danger", @id = "lblidErrorMessage" })
                </div>

                <div class="col-md-4 form-group">
                    @Html.LabelFor(model => model.Nombre, new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", onkeypress = "return SoloLetras(event,this)", @id = "txtNombre" })
                    @Html.ValidationMessageFor(model => Model.Nombre, "", new { @class = "text-danger", @id = "lblNombreErrorMessage" })
                </div>

                <div class="col-md-4 form-group">
                    @Html.LabelFor(model => model.ApellidoPaterno, new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.ApellidoPaterno, new { @class = "form-control", onkeypress = "return SoloLetras(event,this)", @id = "txtApellidoPaterno" })
                    @Html.ValidationMessageFor(model => Model.Nombre, "", new { @class = "text-danger", @id = "lblApellidoPaternoErrorMessage" })
                </div>

                <div class="col-md-4 form-group">
                    @Html.LabelFor(model => model.ApellidoMaterno, new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.ApellidoMaterno, new { @class = "form-control", onkeypress = "return SoloLetras(event,this)", @id = "txtApellidoMaterno" })
                    @Html.ValidationMessageFor(model => Model.ApellidoMaterno, "", new { @class = "text-danger", @id = "lblApellidoMaternoErrorMessage" })
                </div>
            </div>
            <div class="row">
                <div class="col-md-4 form-group">
                    @Html.LabelFor(model => model.Parentesco, new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.Parentesco, new { @class = "form-control", onkeypress = "return SoloLetras(event,this)", @id = "txtParentesco" })
                    @Html.ValidationMessageFor(model => Model.Parentesco, "", new { @class = "text-danger", @id = "lblParentescoErrorMessage" })
                </div>

                <div class="col-md-4 form-group">
                    @Html.LabelFor(model => model.NivelTEA, new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.NivelTEA, new { @class = "form-control", @readonly = "readonly" })
                </div>

                <div class="col-md-4 form-group">
                    @Html.LabelFor(model => model.Sexo, new { @class = "form-label" })
                    @Html.DropDownListFor(model => model.Sexo, new SelectList(new[]
                                                {
                                                    new SelectListItem { Text = "Masculino", Value = "True" },
                                                    new SelectListItem { Text = "Femenino", Value = "False" }
                                                }, "Value", "Text", Model.Sexo.ToString()), new { @class = "form-control" })
                </div>
            </div>
            <div class="row">
                <div class="col-md-4 form-group">
                    @Html.LabelFor(model => model.Edad, new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.Edad, new { @class = "form-control", onkeypress = "return SoloNumeros(event,this)", @id = "txtEdad" })
                    @Html.ValidationMessageFor(model => Model.Edad, "", new { @class = "text-danger", @id = "lblEdadErrorMessage" })
                </div>

                <div class="col-md-4 form-group">
                    @Html.LabelFor(model => model.Calle, new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.Calle, new { @class = "form-control", onkeypress = "return NumerosLetras(event,this)", @id = "txtCalle" })
                    @Html.ValidationMessageFor(model => Model.Calle, "", new { @class = "text-danger", @id = "lblCalleErrorMessage" })
                </div>

                <div class="col-md-4 form-group">
                    @Html.LabelFor(model => model.NumeroExterior, new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.NumeroExterior, new { @class = "form-control", onkeypress = "return NumerosLetras(event,this)", @id = "txtNumeroExterior" })
                    @Html.ValidationMessageFor(model => Model.NumeroExterior, "", new { @class = "text-danger", @id = "lblNumeroExteriorErrorMessage" })
                </div>
            </div>
            <div class="row">
                <div class="col-md-4 form-group">
                    @Html.LabelFor(model => model.NumeroInterior, new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.NumeroInterior, new { @class = "form-control", onkeypress = "return NumerosLetras(event,this)", @id = "txtNumeroInterior" })
                    @Html.ValidationMessageFor(model => Model.NumeroInterior, "", new { @class = "text-danger", @id = "lblNumeroInteriorErrorMessage" })
                </div>

                <div class="col-md-4 form-group">
                    @Html.LabelFor(model => model.Colonia, new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.Colonia, new { @class = "form-control", onkeypress = "return SoloLetras(event,this)", @id = "txtColonia" })
                    @Html.ValidationMessageFor(model => Model.Colonia, "", new { @class = "text-danger", @id = "lblColoniaErrorMessage" })
                </div>

                <div class="col-md-4 form-group">
                    @Html.LabelFor(model => model.Municipio, new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.Municipio, new { @class = "form-control", onkeypress = "return SoloLetras(event,this)", @id = "txtMunicipio" })
                    @Html.ValidationMessageFor(model => Model.Municipio, "", new { @class = "text-danger", @id = "lblMunicipioErrorMessage" })
                </div>
            </div>
            <div class="row">
                <div class="col-md-4 form-group">
                    @Html.LabelFor(model => model.Estado, new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.Estado, new { @class = "form-control", onkeypress = "return SoloLetras(event,this)", @id = "txtEstado" })
                    @Html.ValidationMessageFor(model => Model.Estado, "", new { @class = "text-danger", @id = "lblEstadoErrorMessage" })
                </div>

                <div class="col-md-4 form-group">
                    @Html.LabelFor(model => model.CP, new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.CP, new { @class = "form-control", onkeypress = "return SoloNumeros(event,this)", @id = "txtCP" })
                    @Html.ValidationMessageFor(model => Model.CP, "", new { @class = "text-danger", @id = "lblCPErrorMessage" })
                </div>

                <div class="col-md-4 form-group">
                    @Html.LabelFor(model => model.Escolaridad, new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.Escolaridad, new { @class = "form-control", onkeypress = "return SoloLetras(event,this)", @id = "txtEscolaridad" })
                    @Html.ValidationMessageFor(model => Model.Escolaridad, "", new { @class = "text-danger", @id = "lblEscolaridadMessage" })
                </div>
            </div>
        </div>

        <button type="submit" class="btn btn-primary m-3">Guardar cambios</button>
        @Html.ActionLink("Volver", "PerfilFamiliar", "User", new { area = "" }, new { @class = "btn btn-secondary" })
    }
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script src="~/Scripts/LoginRegister/Validaciones.js"></script>