@model  ML.Usuario

@{
    Layout = null;
}


<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>Registro</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
    <link rel="stylesheet" href="~/Content/css/RegisterStyle.css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.0/font/bootstrap-icons.css" rel="stylesheet">

</head>
<body>
    <div class="row-md-12 text-center  pt-5 pb-5">
        <h1 class="titulo">Enlaza-TEA</h1>
    </div>
    <div class="container-center">

        <div class="form-container">

            <div class="container">
                <h1 class="text-center ">Registro</h1>
                <h3 class="text-center ">Ingrese los datos solicitados para crear una nueva cuenta</h3>
                <hr />
                <div class="row mt-4 mb-4">
                    <div class="col">
                        <h6><span class="fw-bold">Nota: </span>Los campos con un asterisco (*) son obligatorios.</h6>
                    </div>
                </div>
                @using (Html.BeginForm("Register", "Login", FormMethod.Post, new { @class = "form-container" }))
                {
                    <div class="row">
                        <div class="col-md-6">
                            @Html.LabelFor(m => m.Nombre, new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.Nombre, new { @class = "form-control", onkeypress = "return SoloLetras(event,this)", onkeyup = "this.value = this.value.toUpperCase();", @id = "txtNombre" })
                            @Html.ValidationMessageFor(model => Model.Nombre, "", new { @class = "text-danger", @id = "lblNombreErrorMessage" })

                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(m => m.ApellidoPaterno, new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.ApellidoPaterno, new { @class = "form-control", onkeypress = "return SoloLetras(event,this)", onkeyup = "this.value = this.value.toUpperCase();", @id = "txtApellidoPaterno" })
                            @Html.ValidationMessageFor(model => Model.ApellidoPaterno, "", new { @class = "text-danger", @id = "lblApellidoPaternoErrorMessage" })

                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            @Html.LabelFor(m => m.ApellidoMaterno, new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.ApellidoMaterno, new { @class = "form-control", onkeypress = "return SoloLetras(event,this)", onkeyup = "this.value = this.value.toUpperCase();", @id = "txtApellidoMaterno" })
                            @Html.ValidationMessageFor(model => Model.ApellidoPaterno, "", new { @class = "text-danger", @id = "lblApellidoMaternoErrorMessage" })

                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(m => m.FechaNacimiento, new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.FechaNacimiento, "{0:yyyy-MM-dd}", new { type = "date", @Value = DateTime.Now.ToString("yyyy-MM-dd"), @class = "form-control" })

                        </div>
                    </div>


                    <div class="row">
                        <div class="col-md-6">
                            @Html.LabelFor(m => m.Email, new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", onblur = "return CorreoValido(event, this)", @id = "txtEmail" })
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger", @id = "lblEmailErrorMessage" })

                            @if (!string.IsNullOrEmpty(ViewBag.Mensaje1))
                            {
                                <p>@ViewBag.Mensaje1</p>
                            }
                        </div>

                        @*<div class="col-md-6">
                            @Html.LabelFor(m => m.Contraseña, new { @class = "form-label" })
                            @Html.PasswordFor(m => m.Contraseña, new { @class = "form-control", oninput = "ValidarPassword(this)", @id = "txtPassword" })
                            @Html.ValidationMessageFor(m => m.Contraseña, "", new { @class = "text-danger", @id = "lblPasswordErrorMessage" })

                        </div>*@

                        <div class="col-md-6">
                            @Html.LabelFor(m => m.Contraseña, new { @class = "form-label" })
                            @*@Html.PasswordFor(m => m.Contraseña, new { @class = "form-control", oninput = "ValidarPassword(this)", @id = "txtPassword" })*@
                            <div class="input-group">
                                @Html.PasswordFor(m => m.Contraseña, new { @class = "form-control", @id = "txtPassword" })
                                <button type="button" class="btn btn-outline-secondary" id="btnMostrarContraseña" onclick="MostrarContrasena()">
                                    <i class="bi bi-eye"></i>
                                </button>
                            </div>
                            @Html.ValidationMessageFor(m => m.Contraseña, "", new { @class = "text-danger", @id = "lblPasswordErrorMessage" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            @*@Html.LabelFor(m => m.Contraseña, new { @class = "form-label" })*@
                            <label class="form-label">Confirmar Contraseña *</label>
                            @Html.PasswordFor(m => m.Contraseña, new { @class = "form-control", oninput = "ConfirmarPassword()", @id = "txtConfirmPassword" })
                            @Html.ValidationMessageFor(m => m.Contraseña, "", new { @class = "text-danger", @id = "lblConfirmPasswordErrorMessage" })

                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(m => m.Rol.IdRol, new { @class = "form-label" })
                            @Html.DropDownListFor(m => m.Rol.IdRol, new SelectList(Model.Rol.Roles, "IdRol", "Nombre"), "Seleccionar", new { @class = "form-select" })
                        </div>
                    </div>

                    <center>
                        <input type="submit" value="Registrarse" class="w-100 btn btn-lg btn-primary" />
                    </center>

                }
                <hr />
                <p class="pt-2 text-center">¿Ya tienes cuenta? <a href="@Url.Action("Login", "Login")">Iniciar Sesión</a></p>

            </div>
        </div>

    </div>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script src="~/Scripts/LoginRegister/Validaciones.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4" crossorigin="anonymous"></script>


</body>
</html>


