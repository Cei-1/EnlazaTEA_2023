@model ML.Especialista

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>Registro</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
    <link rel="stylesheet" href="~/Content/css/RegisterStyle.css" />
</head>
<body>
    <div class="row-md-12 text-center  pt-5 pb-5">
        <h1 class="titulo">Enlaza-TEA</h1>
    </div>
    <div class="container-center">

        <div class="form-container">

            <div class="container">
                <h1 class="text-center ">Completa tu registro</h1>
                <h3 class="text-center ">Ingrese los datos solicitados para terminar de crear su cuenta.</h3>
                <hr />
                @using (Html.BeginForm("CompletarEspecialistaP", "Login", FormMethod.Post, new { @class = "form-container" }))
                {
                    <div class="row">
                        <div class="col-md-6">
                            @Html.LabelFor(m => m.NombreCarrera, new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.NombreCarrera, new { @class = "form-control", onkeypress = "return SoloLetras(event,this)", @id = "txtNombre" })
                            @Html.ValidationMessageFor(model => Model.NombreCarrera, "", new { @class = "text-danger", @id = "lblNombreErrorMessage" })
                        </div>

                        <div class="col-md-6">
                            <label class="form-label">¿Cuento con una cedula?</label>
                            <div class="col-md-6 text-center">
                                <input type="radio" name="CedulaExistente" value="true" id="rdbCedulaSi" /> <label for="rdbCedulaSi">Sí</label>
                                <input type="radio" name="CedulaExistente" value="false" id="rdbCedulaNo" /> <label for="rdbCedulaNo">No</label>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6" id="NoCedula">
                            @Html.LabelFor(m => m.NoCedula, new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.NoCedula, new { @class = "form-control", onkeypress = "return SoloNumeros(event,this)", @id = "txtNoCedula" })
                            @Html.ValidationMessageFor(model => Model.NoCedula, "", new { @class = "text-danger", @id = "lblNoCedulaErrorMessage" })
                        </div>

                        <div class="col-md-6" id="fileUploadDiv" style="display: none;">
                            <label class="form-label">Captura comprobante experiencia</label>
                            <input type="file" accept=".jpg, .jpeg, .png, .pdf" name="file" id="file" class="form-control" />
                            <span id="fileErrorMessage" class="text-danger"></span>
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(m => m.Especialidad, new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.Especialidad, new { @class = "form-control", onkeypress = "return SoloLetras(event,this)", @id = "txtEspecialidad" })
                            @Html.ValidationMessageFor(model => Model.Especialidad, "", new { @class = "text-danger", @id = "lblEspecialidadErrorMessage" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            @Html.LabelFor(m => m.Calle, new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.Calle, new { @class = "form-control", onkeypress = "return NumerosLetras(event,this)", @id = "txtCalle" })
                            @Html.ValidationMessageFor(model => Model.Calle, "", new { @class = "text-danger", @id = "lblCalleErrorMessage" })
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(m => m.NumeroExterno, new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.NumeroExterno, new { @class = "form-control", onkeypress = "return NumerosLetras(event,this)", @id = "txtNumeroExterior" })
                            @Html.ValidationMessageFor(model => Model.NumeroExterno, "", new { @class = "text-danger", @id = "lblNumeroExteriorErrorMessage" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            @Html.LabelFor(m => m.NumeroInterno, new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.NumeroInterno, new { @class = "form-control", onkeypress = "return NumerosLetras(event,this)", @id = "txtNumeroInterior" })
                            @Html.ValidationMessageFor(model => Model.NumeroInterno, "", new { @class = "text-danger", @id = "lblNumeroInteriorErrorMessage" })
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(m => m.Colonia, new { @class = "form-label" }) <!-- Nuevo campo Colonia -->
                            @Html.TextBoxFor(m => m.Colonia, new { @class = "form-control", onkeypress = "return SoloLetras(event,this)", @id = "txtColonia" })
                            @Html.ValidationMessageFor(model => Model.Colonia, "", new { @class = "text-danger", @id = "lblColoniaErrorMessage" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            @Html.LabelFor(m => m.Ciudad, new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.Ciudad, new { @class = "form-control", onkeypress = "return SoloLetras(event,this)", @id = "txtMunicipio" })
                            @Html.ValidationMessageFor(model => Model.Ciudad, "", new { @class = "text-danger", @id = "lblMunicipioErrorMessage" })
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(m => m.Estado, new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.Estado, new { @class = "form-control", onkeypress = "return SoloLetras(event,this)", @id = "txtEstado" })
                            @Html.ValidationMessageFor(model => Model.Estado, "", new { @class = "text-danger", @id = "lblEstadoErrorMessage" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            @Html.LabelFor(m => m.CodigoPostal, new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.CodigoPostal, new { @class = "form-control", onkeypress = "return SoloNumeros(event,this)", @id = "txtCP" })
                            @Html.ValidationMessageFor(model => Model.CodigoPostal, "", new { @class = "text-danger", @id = "lblCPErrorMessage" })
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(m => m.Telefono, new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.Telefono, new { @class = "form-control", onkeypress = "return SoloNumeros(event,this)", @id = "txtTelefono" })
                            @Html.ValidationMessageFor(model => Model.Telefono, "", new { @class = "text-danger", @id = "lblTelefonoErrorMessage" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            @Html.LabelFor(m => m.Celular, new { @class = "form-label" }) <!-- Nuevo campo Celular -->
                            @Html.TextBoxFor(m => m.Celular, new { @class = "form-control", onkeypress = "return SoloNumeros(event,this)", @id = "txtCelular" })
                            @Html.ValidationMessageFor(model => Model.Celular, "", new { @class = "text-danger", @id = "lblCelularErrorMessage" })
                        </div>
                    </div>
                    <center>
                        <input type="submit" value="Guardar" class="w-100 btn btn-lg btn-primary" />
                    </center>
                    <div class="row mt-4">
                        <div class="col">
                            <h6><span class="fw-bold">Nota: </span>La direccion es del lugar donde atiendes normalmente.</h6>
                        </div>
                    </div>
                }

            </div>
        </div>
    </div>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script src="~/Scripts/LoginRegister/Validaciones.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4" crossorigin="anonymous"></script>
    <script>
        $(document).ready(function () {
            $('form').submit(function (e) {
                var isValid = true;

                if ($('#txtNombre').val() === '') {
                    $('#lblNombreErrorMessage').text('Campo obligatorio');
                    isValid = false;
                } else {
                    $('#lblNombreErrorMessage').text('');
                }

                //if ($('#txtNoCedula').val() === '') {
                //    $('#lblNoCedulaErrorMessage').text('Campo obligatorio');
                //    isValid = false;
                //} else {
                //    $('#lblNoCedulaErrorMessage').text('');
                //}

                //if ($('#txtEspecialidad').val() === '') {
                //    $('#lblEspecialidadErrorMessage').text('Campo obligatorio');
                //    isValid = false;
                //} else {
                //    $('#lblEspecialidadErrorMessage').text('');
                //}

                if ($('#txtCalle').val() === '') {
                    $('#lblCalleErrorMessage').text('Campo obligatorio');
                    isValid = false;
                } else {
                    $('#lblCalleErrorMessage').text('');
                }

                if ($('#txtNumeroExterior').val() === '') {
                    $('#lblNumeroExteriorErrorMessage').text('Campo obligatorio');
                    isValid = false;
                } else {
                    $('#lblNumeroExteriorErrorMessage').text('');
                }

                if ($('#txtNumeroInterior').val() === '') {
                    $('#lblNumeroInteriorErrorMessage').text('Campo obligatorio');
                    isValid = false;
                } else {
                    $('#lblNumeroInteriorErrorMessage').text('');
                }

                if ($('#txtColonia').val() === '') {
                    $('#lblColoniaErrorMessage').text('Campo obligatorio');
                    isValid = false;
                } else {
                    $('#lblColoniaErrorMessage').text('');
                }

                if ($('#txtMunicipio').val() === '') {
                    $('#lblMunicipioErrorMessage').text('Campo obligatorio');
                    isValid = false;
                } else {
                    $('#lblMunicipioErrorMessage').text('');
                }

                if ($('#txtEstado').val() === '') {
                    $('#lblEstadoErrorMessage').text('Campo obligatorio');
                    isValid = false;
                } else {
                    $('#lblEstadoErrorMessage').text('');
                }

                if ($('#txtCP').val() === '') {
                    $('#lblCPErrorMessage').text('Campo obligatorio');
                    isValid = false;
                } else {
                    $('#lblCPErrorMessage').text('');
                }

                if ($('#txtTelefono').val() === '') {
                    $('#lblTelefonoErrorMessage').text('Campo obligatorio');
                    isValid = false;
                } else {
                    $('#lblTelefonoErrorMessage').text('');
                }

                if ($('#txtCelular').val() === '') {
                    $('#lblCelularErrorMessage').text('Campo obligatorio');
                    isValid = false;
                } else {
                    $('#lblCelularErrorMessage').text('');
                }
                if (!isValid) {
                    e.preventDefault();
                }
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $('#rdbCedulaSi').change(function () {
                $('#fileUploadDiv').hide();
                $('#NoCedula').show();
                $('#file').prop('required', false);
                $('#txtNoCedula').prop('required', true);
            });

            $('#rdbCedulaNo').change(function () {
                $('#fileUploadDiv').show();
                $('#NoCedula').hide();
                $('#file').prop('required', true);
                $('#txtNoCedula').prop('required', false);
            });

            $('form').submit(function (e) {
                var isValid = true;

                // Resto de la validación aquí...

                // Validación específica para el campo de carga de archivos
                if ($('#rdbCedulaNo').is(':checked') && $('#file').get(0).files.length === 0) {
                    $('#fileErrorMessage').text('Campo obligatorio');
                    isValid = false;
                } else {
                    $('#fileErrorMessage').text('');
                }

                if (!isValid) {
                    e.preventDefault();
                }
            });
        });
    </script>

</body>
</html>
